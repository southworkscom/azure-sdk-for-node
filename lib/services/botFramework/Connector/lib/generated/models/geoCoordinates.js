/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * GeoCoordinates (entity type: "https://schema.org/GeoCoordinates").
 *
 */
class GeoCoordinates {
  /**
   * Create a GeoCoordinates.
   * @member {number} [elevation] Elevation of the location [WGS
   * 84](https://en.wikipedia.org/wiki/World_Geodetic_System).
   * @member {number} [latitude] Latitude of the location [WGS
   * 84](https://en.wikipedia.org/wiki/World_Geodetic_System).
   * @member {number} [longitude] Longitude of the location [WGS
   * 84](https://en.wikipedia.org/wiki/World_Geodetic_System).
   * @member {string} [type] The type of this object. Always set to
   * GeoCoordinates.
   * @member {string} [name] Name of the location.
   */
  constructor() {
  }

  /**
   * Defines the metadata of GeoCoordinates
   *
   * @returns {object} metadata of GeoCoordinates
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GeoCoordinates',
      type: {
        name: 'Composite',
        className: 'GeoCoordinates',
        modelProperties: {
          elevation: {
            required: false,
            serializedName: 'elevation',
            type: {
              name: 'Number'
            }
          },
          latitude: {
            required: false,
            serializedName: 'latitude',
            type: {
              name: 'Number'
            }
          },
          longitude: {
            required: false,
            serializedName: 'longitude',
            type: {
              name: 'Number'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = GeoCoordinates;
